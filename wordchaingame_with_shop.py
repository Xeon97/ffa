
# -*- coding: utf-8 -*-
# meta developer: @YourUsername
# meta banner: https://example.com/banner.jpg

from telethon import events
from .. import loader, utils
from datetime import datetime, timedelta
import random

class WordChainGameMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∏–≥—Ä—ã '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞' —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏, –º–∞–≥–∞–∑–∏–Ω–æ–º –∏ –±–æ–Ω—É—Å–∞–º–∏"""
    strings = {"name": "WordChainGame"}

    def __init__(self):
        self.active_games = {}
        self.words_used = set()
        self.profiles = {}

    async def client_ready(self, client, db):
        self.client = client

    async def startchaincmd(self, message):
        """–ù–∞—á–∞—Ç—å –∏–≥—Ä—É '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞'"""
        chat_id = utils.get_chat_id(message)
        if chat_id in self.active_games:
            await message.edit("–ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç!")
            return

        self.active_games[chat_id] = {
            "last_word": None,
            "players": {}
        }
        self.words_used.clear()
        await message.edit(
            "üéÆ –ò–≥—Ä–∞ '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞' –Ω–∞—á–∞–ª–∞—Å—å!\n\n–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–ª–æ–≤–æ!"
        )

    @loader.unrestricted
    async def watcher(self, message):
        chat_id = utils.get_chat_id(message)
        if chat_id not in self.active_games:
            return

        game = self.active_games[chat_id]
        text = message.text.strip().lower()
        user_id = message.sender_id

        if user_id not in self.profiles:
            self.profiles[user_id] = {
                "points": 0,
                "inventory": {"skip_turn": 0, "transfer_turn": 0},
                "last_bonus_time": datetime.min
            }

        if game["last_word"]:
            last_letter = game["last_word"][-1]
            if text[0] != last_letter:
                await message.respond(f"‚ùå –°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É '{last_letter.upper()}'!")
                return

        if text in self.words_used:
            await message.respond("‚ùå –≠—Ç–æ —Å–ª–æ–≤–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å!")
            return

        self.words_used.add(text)
        game["last_word"] = text
        game["players"][user_id] = game["players"].get(user_id, 0) + 1

        self.profiles[user_id]["points"] += 1

        await message.respond(
            f"‚úÖ {text.capitalize()} –ø—Ä–∏–Ω—è—Ç–æ! –í–∞—à —Ö–æ–¥ –∑–∞–ø–∏—Å–∞–Ω.\n\n–°–ª–µ–¥—É—é—â–∏–π –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–¥—É–º–∞—Ç—å —Å–ª–æ–≤–æ –Ω–∞ –±—É–∫–≤—É '{text[-1].upper()}'."
        )

    async def stopchaincmd(self, message):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞'"""
        chat_id = utils.get_chat_id(message)
        if chat_id not in self.active_games:
            await message.edit("–ò–≥—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞!")
            return

        game = self.active_games.pop(chat_id)
        results = "\n".join(
            [
                f"{(await self.client.get_entity(uid)).first_name}: {score} —Å–ª–æ–≤"
                for uid, score in game["players"].items()
            ]
        )
        await message.edit(f"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Ç–æ–≥–∏:\n\n{results}")

    async def profilecmd(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞"""
        user_id = message.sender_id
        profile = self.profiles.get(user_id, {"points": 0, "inventory": {}, "last_bonus_time": datetime.min})
        inventory = profile["inventory"]
        await message.edit(
            f"üìä –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
            f"‚Ä¢ –û—á–∫–∏: {profile['points']}\n"
            f"‚Ä¢ –ü—Ä–æ–ø—É—Å–∫–∏ —Ö–æ–¥–∞: {inventory.get('skip_turn', 0)}\n"
            f"‚Ä¢ –ü–µ—Ä–µ–¥–∞—á–∏ —Ö–æ–¥–∞: {inventory.get('transfer_turn', 0)}"
        )

    async def shopcmd(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞–≥–∞–∑–∏–Ω"""
        await message.edit(
            "üõí –ú–∞–≥–∞–∑–∏–Ω:\n"
            "1. –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞ ‚Äî 5 –æ—á–∫–æ–≤ (–∫–æ–º–∞–Ω–¥–∞: .buy skip_turn)\n"
            "2. –ü–µ—Ä–µ–¥–∞—á–∞ —Ö–æ–¥–∞ ‚Äî 10 –æ—á–∫–æ–≤ (–∫–æ–º–∞–Ω–¥–∞: .buy transfer_turn)"
        )

    async def buycmd(self, message):
        """–ö—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ"""
        args = utils.get_args_raw(message)
        user_id = message.sender_id

        if user_id not in self.profiles:
            self.profiles[user_id] = {
                "points": 0,
                "inventory": {"skip_turn": 0, "transfer_turn": 0},
                "last_bonus_time": datetime.min
            }

        profile = self.profiles[user_id]

        if args == "skip_turn":
            if profile["points"] >= 5:
                profile["points"] -= 5
                profile["inventory"]["skip_turn"] += 1
                await message.edit("‚úÖ –í—ã –∫—É–ø–∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞!")
            else:
                await message.edit("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤!")
        elif args == "transfer_turn":
            if profile["points"] >= 10:
                profile["points"] -= 10
                profile["inventory"]["transfer_turn"] += 1
                await message.edit("‚úÖ –í—ã –∫—É–ø–∏–ª–∏ –ø–µ—Ä–µ–¥–∞—á—É —Ö–æ–¥–∞!")
            else:
                await message.edit("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤!")
        else:
            await message.edit("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .shop, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.")

    async def bonuscmd(self, message):
        """–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å (—Ä–∞–∑ –≤ —á–∞—Å)"""
        user_id = message.sender_id

        if user_id not in self.profiles:
            self.profiles[user_id] = {
                "points": 0,
                "inventory": {"skip_turn": 0, "transfer_turn": 0},
                "last_bonus_time": datetime.min
            }

        profile = self.profiles[user_id]
        now = datetime.now()

        if now - profile["last_bonus_time"] >= timedelta(hours=1):
            bonus_points = random.randint(1, 5)
            profile["points"] += bonus_points
            profile["last_bonus_time"] = now
            await message.edit(f"üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ {bonus_points} –±–æ–Ω—É—Å–Ω—ã—Ö –æ—á–∫–æ–≤!")
        else:
            remaining_time = timedelta(hours=1) - (now - profile["last_bonus_time"])
            await message.edit(f"‚ùå –ë–æ–Ω—É—Å —É–∂–µ –ø–æ–ª—É—á–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ {remaining_time.seconds // 60} –º–∏–Ω—É—Ç.")
